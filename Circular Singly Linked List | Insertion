
#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link;
};

void display(struct node *p)
{
    struct node *t = p -> link;
    
    do
    {
        printf("%d ",t->data);
        t = t -> link;
    }while(t != p->link);
}

struct node *addToEmpty(struct node *last , int data)
{
    if(last!=NULL)
    return last;
    
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp -> data = data;
    last = temp ;
    temp -> link = last;      // temp -> link = temp;
    
    return last;
}

struct node *addBegin(struct node *last,int data)
{
    if(last == NULL)
    return addToEmpty(last ,data);
    
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp -> data = data ;
    temp -> link = last -> link ;
    last -> link = temp;
    
    return temp;
}

struct node *addatEnd(struct node *last , int data)
{
    if(last == NULL)
    return addToEmpty(last , data);
    
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp -> data = data;
    temp -> link = last -> link;
    last -> link = temp ;
    last = temp;
    
    return last;
}

struct node *addAfter(struct node *last,int data,int item)
{
    if(last == NULL)
    return NULL;
    
    struct node *temp,*p = last -> link;
    do
    {
        if(p->data == item)
        {
            temp = (struct node *)malloc(sizeof(struct node));
            temp -> data = data;
            temp -> link = p -> link;
            p -> link = temp;
            
            if(p == last)
            last = p;
            
            return last;
        }
        p = p->link;
    }while(p!=last -> link); 
    
    printf("Item is not found in the list");
    
    return last;
    
}
int main()
{
    struct node *last = NULL ;
    
    last = addToEmpty(last,6);
    last = addBegin(last,4);
    last = addBegin(last,2);
    last = addatEnd(last,8);
    last = addatEnd(last,12);
    last = addAfter(last,10,8);
    
    display(last);
    
    return 0;
}
