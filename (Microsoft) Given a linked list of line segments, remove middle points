
#include <stdio.h>
#include <stdlib.h>

struct node
{
    int x,y;
    struct node *link;
};

void push(struct node **s,int x,int y)
{
 struct node *temp = (struct node *)malloc(sizeof(struct node));
 temp ->x = x;
 temp ->y = y;
 temp ->link = *s;
 *s = temp;

}
void display(struct node* root)
{
    struct node *p=root;
    while(p)
    {
        printf("(%d,%d) ->",p->x,p->y);
        p = p->link;
    }
}

void deletenodes(struct node *head,struct node *next)
{
    head -> link = next -> link;
    next -> link = NULL;
    free(next);
}

struct node* deleteMiddle(struct node *head)
{    
    //base cases
    if(head == NULL || head->link ==NULL || head->link->link ==NULL)
    return head;
    
    struct node *next = head->link;
    struct node *nextnext = next -> link;
    
    // if vertical line
    if(head->x==next->x)
    {
        while(nextnext!=NULL && nextnext->x == next->x)
        {
            deletenodes(head , next);
            
            next = nextnext;
            nextnext = nextnext -> link;
            fflush(stdin);
        }
    }
    // if horizonatal line
    else if(head->y==next->y)
    {
        while(nextnext!=NULL && nextnext->y == next->y)
        {
            deletenodes(head , next);
            
            next = nextnext;
            nextnext = nextnext -> link;
            fflush(stdin);
        }
    }
    else
    {
        printf("\nNo adjacent are there");
        return NULL;
    }
    
    deleteMiddle(head->link);
    
    return head;
}
int main()
{
     struct node *head = NULL; 
  
    push(&head, 40,5); 
    push(&head, 20,5); 
    push(&head, 10,5); 
    push(&head, 10,8); 
    push(&head, 10,10); 
    push(&head, 3,10); 
    push(&head, 1,10); 
    push(&head, 0,10); 
    
    display(head);
    
    printf("\n");
   if(deleteMiddle(head) != NULL)
   {
       display(head);
   }
    
    return 0;
}
