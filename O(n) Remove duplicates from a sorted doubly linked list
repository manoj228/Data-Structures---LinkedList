
#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link,*prev;
};

void push(struct node **a,int data)
{
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp -> data = data;
    temp -> link = (*a);
    temp -> prev = NULL;
    
    if((*a)!=NULL)
    (*a)->prev = temp;
    
    (*a) = temp;
}

void display(struct node *t)
{
    while(t)
    {
        printf("%d ",t->data);
        t = t->link;
    }
    printf("\n");
}

void delete(struct node **a,struct node* del)
{
    if((*a) == NULL || del == NULL)
    return;
    
    //if node to be deleted is head node
    if((*a)==del)
    (*a) = del -> link;
    
    //if node to be deleted is not last node 
    if(del -> link != NULL)
    del -> link -> prev = del -> prev; 
    
     //if node to be deleted is not first node
     if(del -> prev != NULL)
     del -> prev -> link = del -> link ;
     
     free(del);    
}
void removedup(struct node** a)
{
    if((*a)==NULL)
    return;
    
    struct node *curr = (*a) ;
    
    while(curr -> link)
    {
        if(curr -> data == curr -> link -> data)
        delete(a,curr);
        
        else
        curr = curr -> link;
    }
}

int main()
{
    struct node *a = NULL;
    
    push(&a,4);
    push(&a,4);
    push(&a,4);
    push(&a,4);
    push(&a,8);
    push(&a,8);
    push(&a,12);
    
    display(a);
    
    removedup(&a);
    
    display(a);

    return 0;
}
