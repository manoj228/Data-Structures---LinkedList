
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
struct node
{
  char *data;
  struct node *link ;
};

struct node *push(char *data)
{
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp -> data = data ;
    temp -> link = NULL ;
    
}

void display(struct node *p)
{
    while(p)
    {
        printf("%s ",p->data);
        p = p -> link ; 
    }
    
}

int ispalin(char c[])
{
    int len = strlen(c);
    
    for(int i = 1 ; i <=len / 2 ; i++)
    if(c[i] != c[len-i])
    return 0;

    
    return 1;
}
int isPalindrome(struct node *root)
{
    char c[100];
    while(root)
    {
        strcat(c,root->data) ;
        root = root -> link ;
    }
    printf("%s\n",c);
    
    return ispalin(c);
}

int main()
{
    struct node *root = push("a") ;
    root -> link = push("bc");
    root -> link -> link = push("d");
    root -> link -> link -> link = push("dcb");
    root -> link -> link -> link -> link = push("a");
    
    
   // display(root);
    
    printf("\n");
    
    isPalindrome(root) ? printf("True") : printf("False");
    
    return 0;
}
