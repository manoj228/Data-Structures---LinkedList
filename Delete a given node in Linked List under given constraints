
#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link ;
};

void push(struct node **p,int data)
{
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp -> data = data ;
    temp -> link = (*p);
    (*p) = temp;
}

void display(struct node *t)
{
    while(t)
    {
        printf("%d ",t->data);
        t=t->link;
    }
}

void deleteNode(struct node *p,struct node *n)
{
   // when deleting node is head node
    if(p == n)
    {
        if(p->link == NULL)
        {
            printf("\nThere is only one node and list can't be empty");
            return ;
        }
        
        //copy data
        p->data = p->link -> data;
        
        //store address next node
        n = p -> link;
        
        //remove the link
        p->link = p->link->link;
        
       free(n);
    }
    
    //when deleting other node
    struct node *prev = p;
    while(prev -> link != NULL && prev->link != n)
    prev = prev -> link;
    
    if(prev -> link == NULL)
    {
        printf("\nNode can't be found");
    }
    
    prev -> link = prev -> link -> link;
    
    free(n);
    
    return ;
}

int main()
{
    struct node *head=NULL;
    
    push(&head,3); 
    push(&head,2); 
    push(&head,6); 
    push(&head,5); 
    push(&head,11); 
    push(&head,10); 
    push(&head,15); 
    push(&head,12); 
    
    display(head);
    
    deleteNode(head, head->link->link);
    
    printf("\n");
    display(head);
    return 0;
}
